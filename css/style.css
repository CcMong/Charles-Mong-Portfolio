/*GLOBAL
=========*/

* {
  box-sizing: border-box;
}

body {
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  line-height: 1.5;
}

p {
  text-align: justify;
}

/*Colour variables defined*/

:root {
  --backgrColour: darkslategray;
  --headerText: rgba(255, 157, 0, 0.991);
  --whiteColor: white;
}

/*HEADER AND NAV BAR
=====================*/

.header {
  display: flex;
  justify-content: flex-end;
  align-items: center; /*Vertically aligns*/
  box-shadow: 0 1px 8px #ddd;
  background: var(--backgrColour);
}

#nav-heading {
  margin-right: auto; /*Moves the heading to the left*/
  font-size: 2em;
  padding: 0 10px 0 50px;
  color: var(--whiteColor);
  background: var(--headerText);
}

header li {
  list-style: none; /*Gets rid of bulletpoints on links*/
  display: inline-block; /*Places links in a row*/
  padding: 0 10px;
  border-bottom: 3px solid var(--headerText);
}

.navigation {
  margin-right: 85px;
}

header a {
  text-decoration: none; /*Gets rid of the link underline*/
  color: var(--headerText);
}

header a:hover {
  color: rgb(163, 108, 5);
}

/*HERO BANNER IMAGE
====================*/

.hero {
  background: var(--headerText);
  background-image: url(../images/web-dev-hero.JPG);
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  align-items: center;
  display: flex;
  position: relative;
  height: 13em;
}

/*MAIN CONTENT
===============*/

/*Will begin by creating the mobile layout*/

main, section, aside {
  margin: 0;
  padding: 10px; 
  color: var(--backgrColour);
}

main {
  background: var(--whiteColor);
}

/*Styling for Sidebars and Content
-----------------------------------*/

/*Next, we will create the medium device width layout. Everything stacks normally except for sidebars beside content.
So, will use flexbox for this two-column layout, and use a media query to turn flex on when device width is 768px and above.*/

@media screen and (min-width: 768px) {
  .flex-container {
      display: flex;
  }
}

.sidebar {
  flex: 0 1 200px; /*sidebar fixed 200px width*/ 
  text-align: right;
  border-right: 2px solid var(--backgrColour);
  margin: 10px;
} 

.content {
  flex: 1; /*Basically flex-grow, flex-shrink and flex-basis all set to 1*/
}

/*Next is to add styles for desktop width. I want to set a max-width for the main content part. This will limit the width of the sidebar and content divs, and make the site readable even on ultrawide monitors*/

/*Create a class which we will add to the flex-container wrapper that will impose the max width of 1200px/75rem, and center the container on widths above 1200px*/

.width-wrap {
  max-width: 75rem;
  margin: auto;
}

/*Work Portfolio Grid
----------------------*/

/*Next, I will create a grid within the Work Content box*/

.grid-container {
  display: grid;
  grid-gap: 5px;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 15em 6em 6em;
  grid-template-areas:
  "top-row top-row"
  "first-mid second-mid"
  "first-bottom second-bottom"
  ;
}

/*And then assign the grid areas to the respective classes*/

.top-row {
  grid-area: top-row;
  background-image: url(../images/wine-tasting-etiquette_.jpg);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  align-items: center;
  display: flex;
  position: relative;
}

h3 {
  background: var(--headerText);
  font-size: 15px;
  display: inline-block; /*This and the z index make the h3 label overlay the a link*/
  z-index: 100;
}

/*For links within the top-row class for the big image: */
.top-row a {
  display: block;
  position: absolute;
  height: 15em; /*Same height as defined for the grid*/
  width: 62.5em; /*1200 minus 200px for th sidebar = 1000px ~ 62.5em*/
}

/*For links within the other images in the grid: */

.small-image a {
  display: block;
  position: absolute; 
  height: 6em;
  width: 30em;
}

.first-mid {
  grid-area: first-mid;
  background-image: url(../images/stock-investment-calc.jpg);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  align-items: center;
  display: flex;
  position: relative;
}

.second-mid {
  grid-area: second-mid;
  background-image: url(../images/jazz-on-demand.jpg);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  align-items: center;
  display: flex;
  position: relative;
}

.first-bottom {
  grid-area: first-bottom;
  background-image: url("../images/P2P-lending.jpg");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  align-items: center;
  display: flex;
  position: relative;
}

.second-bottom {
  grid-area: second-bottom;
  background-image: url(../images/farm-produce.jpg);
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  align-items: center;
  display: flex;
  position: relative;
}

.grid-container > * {
  border: 2px solid var(--headerText);
}










